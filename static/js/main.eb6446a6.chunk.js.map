{"version":3,"sources":["styles/styleVars.js","styles/globalStyles.js","components/NavBar.jsx","components/Product.jsx","components/Loading.jsx","components/Error.jsx","components/Products.jsx","components/Cart.jsx","components/Landing.jsx","App.js","reportWebVitals.js","index.js"],"names":["colors","black","lightPink","lightBlue","lightRed","white","createGlobalStyle","reset","Nav","styled","nav","NavBar","Container","div","ProductInformation","Button","button","props","outOfStock","Product","data","addToCart","cartContents","gsx$availability","$t","formattedCurrency","gsx$priceincents","toFixed","gsx$name","gsx$description","onClick","id","Date","now","name","price","defaultProps","Loading","Error","Products","useState","status","setStatus","products","setProducts","useEffect","axios","get","then","response","feed","entry","catch","map","product","Header","h1","ItemContainer","Cart","removeFromCart","length","item","type","filter","costInDollars","reduce","a","b","parseInt","totalCost","Landing","setCartContents","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb6446a6.chunk.js","sourcesContent":["const colors = {\n  black: '#000000',\n  lightPink: '#FEDFE7',\n  lightBlue: '#D3E0FF',\n  lightRed: '#E96245',\n  white: '#FFFFFF'\n};\n\nexport default colors;\n","import { createGlobalStyle } from 'styled-components';\nimport { reset } from 'styled-reset';\nimport colors from './styleVars';\n\nexport default createGlobalStyle`\n  ${reset}\n\n  * {\n    box-sizing: border-box;\n    font-size: 16px;\n  }\n\n  @media (max-width: 1024px) {\n    font-size: 14px;\n  }\n\n  @media (max-width: 600px) {\n    font-size: 12px;\n  }\n\n  html, body {\n    height: 100%;\n    width: 100%;\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 300;\n    font-size: 1rem;\n  }\n\n  h1 {\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 700;\n    font-size: 2rem;\n  }\n\n  h2 {\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 500;\n    font-size: 1.5rem;\n  }\n\n  button {\n    cursor: pointer;\n    background-color: ${colors.white};\n    border: 1px solid ${colors.black};\n    border-radius: 3px;\n    padding: 5px 10px;\n    margin: 5px 10px;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Nav = styled.nav`\n  display: flex;\n  min-height: 4rem;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NavBar = () => (\n  <Nav>\n    <h1>Abound Test App</h1>\n  </Nav>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport colors from '../styles/styleVars';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${colors.lightBlue};\n  margin: 1rem;\n  padding: 1rem;\n  border-radius: 30px;\n`;\n\nconst ProductInformation = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 0 1 75%;\n\n  * {\n    padding: 0.5rem;\n  }\n`;\n\n// outOfStock boolean controls CSS properties to indicate to user that they\n// cannot purchase an item\nconst Button = styled.button`\n  background-color: ${(props) => (props.outOfStock ? colors.lightRed : 'white')};\n  color: ${(props) => (props.outOfStock ? 'white' : 'black')};\n  flex: 0 1 auto;\n  align-self: center;\n  height: 3rem;\n  cursor: ${(props) => (props.outOfStock ? 'not-allowed' : 'pointer')}; ;\n`;\n\nconst Product = ({ data, addToCart, cartContents }) => {\n  const outOfStock = data.gsx$availability.$t === 'out_of_stock';\n\n  const formattedCurrency = `$ ${(data.gsx$priceincents.$t / 100).toFixed(2)}`;\n\n  const addItemToCart = () => {\n    // Spread existing cart items into cartContents state and add new item with\n    // a hacky unique ID of the current time\n    addToCart([\n      ...cartContents,\n      {\n        id: Date.now(),\n        name: data.gsx$name.$t,\n        price: data.gsx$priceincents.$t\n      }\n    ]);\n  };\n\n  return (\n    <Container>\n      <ProductInformation outOfStock={outOfStock}>\n        <h2>{data.gsx$name.$t}</h2>\n        <div>{data.gsx$description.$t}</div>\n        <div>{formattedCurrency}</div>\n      </ProductInformation>\n      <Button\n        // Do now allow users to add items to Cart if outOfStock\n        onClick={outOfStock ? () => {} : addItemToCart}\n        outOfStock={outOfStock}\n      >\n        {outOfStock ? 'Out of Stock' : 'Add to Cart'}\n      </Button>\n    </Container>\n  );\n};\n\nProduct.propTypes = {\n  data: PropTypes.object.isRequired,\n  addToCart: PropTypes.func.isRequired,\n  cartContents: PropTypes.instanceOf(Array)\n};\n\nProduct.defaultProps = {\n  cartContents: []\n};\n\nexport default Product;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  align-self: center;\n  font-size: 2rem;\n`;\n\nconst Loading = () => <Container>Loading...</Container>;\n\nexport default Loading;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  align-self: center;\n  font-size: 2rem;\n`;\n\nconst Error = () => <Container>Error!</Container>;\n\nexport default Error;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Product from './Product';\nimport Loading from './Loading';\nimport Error from './Error';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem;\n  flex: 0 1 75%;\n`;\n\nconst Products = ({ addToCart, cartContents }) => {\n  // TODO: Should put apiUrl into env var\n  const apiUrl = 'https://spreadsheets.google.com/feeds/list/1Cp0owZ_71huZOBLiX57hKTvxKYEo4qZC1y_IAHV6rX4/od6/public/values?alt=json';\n  // Default state in state machine is 'loading'\n  const [status, setStatus] = useState('loading');\n  const [products, setProducts] = useState([]);\n\n  // Get data from endpoint provided by abound\n  useEffect(() => {\n    axios\n      .get(apiUrl)\n      .then((response) => {\n        setProducts(response.data.feed.entry);\n        setStatus('');\n      })\n      .catch(() => {\n        setStatus('error');\n      });\n  }, []);\n\n  // Early return if loading\n  if (status === 'loading') {\n    return <Loading />;\n  }\n\n  // Early return if error\n  if (status === 'error') {\n    return <Error />;\n  }\n\n  // Map through array of content and render\n  return (\n    <Container>\n      <h1>Products</h1>\n      {products.map((product) => (\n        <Product\n          key={product.id.$t}\n          data={product}\n          addToCart={addToCart}\n          cartContents={cartContents}\n        />\n      ))}\n    </Container>\n  );\n};\n\nProducts.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  cartContents: PropTypes.instanceOf(Array)\n};\n\nProducts.defaultProps = {\n  cartContents: []\n};\n\nexport default Products;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport colors from '../styles/styleVars';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem;\n  flex: 0 1 25%;\n  border: 1px solid ${colors.black};\n\n  div {\n    margin: 0.5rem;\n  }\n`;\n\nconst Header = styled.h1`\n  margin: 1rem;\n`;\n\nconst ItemContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${colors.lightPink};\n  margin: 1rem;\n  padding: 1rem;\n  border-radius: 30px;\n\n  div {\n    margin: 0.5rem;\n  }\n`;\n\nconst Cart = ({ cartContents, removeFromCart }) => {\n  // Format and add up total cost of all items in Cart\n  const totalCost = () => {\n    const allPrices = cartContents.map((item) => item.price);\n    const costInCents = allPrices.reduce((a, b) => a + parseInt(b, 10), 0);\n    const costInDollars = (costInCents / 100).toFixed(2);\n    const formattedCost = costInDollars ? ` $ ${costInDollars}` : ' N/A';\n    return formattedCost;\n  };\n\n  // TODO: Extract this method to a shared file (used in multiple places in app)\n  const formattedCurrency = (price) => `$ ${(price / 100).toFixed(2)}`;\n\n  // Remove the item that has the same unique ID as the item that is clicked\n  const removeItemFromCart = (id) => removeFromCart(cartContents.filter((item) => item.id !== id));\n\n  // Early return if there are no items in the Cart\n  const renderCartContents = () => {\n    if (cartContents.length === 0) {\n      return <ItemContainer>Cart is empty!</ItemContainer>;\n    }\n\n    return cartContents.map((item) => (\n      <ItemContainer key={item.id}>\n        <div>{item.name}</div>\n        <div>{formattedCurrency(item.price)}</div>\n        <button type=\"button\" onClick={() => removeItemFromCart(item.id)}>\n          X\n        </button>\n      </ItemContainer>\n    ));\n  };\n  return (\n    <Container>\n      <Header>Cart</Header>\n      {renderCartContents()}\n      <div>\n        Total:\n        {totalCost()}\n      </div>\n    </Container>\n  );\n};\n\nCart.propTypes = {\n  cartContents: PropTypes.instanceOf(Array),\n  removeFromCart: PropTypes.func.isRequired\n};\n\nCart.defaultProps = {\n  cartContents: []\n};\n\nexport default Cart;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Products from './Products';\nimport Cart from './Cart';\n\nconst Container = styled.div`\n  display: flex;\n  margin: 2rem;\n  justify-content: space-between;\n`;\n\nconst Landing = () => {\n  const [cartContents, setCartContents] = useState([]);\n  return (\n    <Container>\n      <Products cartContents={cartContents} addToCart={setCartContents} />\n      <Cart cartContents={cartContents} removeFromCart={setCartContents} />\n    </Container>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport GlobalStyles from './styles/globalStyles';\nimport NavBar from './components/NavBar';\nimport Landing from './components/Landing';\n\nconst App = () => (\n  <>\n    <GlobalStyles />\n    <NavBar />\n    <Landing />\n  </>\n);\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}